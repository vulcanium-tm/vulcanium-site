# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#


version: 2.1

orbs:
  slack: circleci/slack@3.4.2
  aws-cli: circleci/aws-cli@2.0.3
  aws-ecr: circleci/aws-ecr@7.0.0

# Define the jobs we want to run for this project
jobs:
  build-job:
    working_directory: ~/project
    docker:
      # replace with your preferred image
      - image: node:12.22.7
    steps:
       - checkout
       - run: |
           ls -al
       - run: |
            export NODE_OPTIONS=--max_old_space_size=4096
       - run: |
            rm package-lock.json
       - run:
            name: Install local dependencies
            command: npm install
       - run: |
            sed 's#http://localhost:8080/api/api#http://localhost:8080/api/api#g' ./src/assets/env.js
       - run: |
            sed 's#http://localhost:8080/api/api#http://localhost:8080/api/api#g' ./src/environments/environment.ts
       - run: |
            sed 's#http://localhost:8080/api/api#http://localhost:8080/api/api#g' ./src/environments/environment.prod.ts

       - run: node ./node_modules/@angular/cli/bin/ng build --prod

       - persist_to_workspace:
          root: .
          paths:
            - dist/*
            - docker/nginx.conf
            - Dockerfile

  image:
    machine: true
    steps:
       - attach_workspace:
          at: .
       # start proprietary DB using private Docker image
       # with credentials stored in the UI
       - run: |
           ls -al
       - run: |
           docker login -u shopizerecomm -p $DOCKERHUB_PASSWORD
       - run: |
           docker build . -t shopizerecomm/shopizer-admin:latest
       - run: |
           docker push shopizerecomm/shopizer-admin:latest

  # The deploy job
  deploy:
    machine: true
    working_directory: ~/project
    executor: aws-cli/default
    steps:
      - checkout
        # start proprietary DB using private Docker image
        # with credentials stored in the UI
        - run: |
            ls -al
        - run: |
            docker login -u shopizerecomm -p $DOCKERHUB_PASSWORD
        - run: |
            docker build . -t shopizerecomm/shopizer-shop-reactjs:latest
        - run: |
            docker push shopizerecomm/shopizer-shop-reactjs:latest
        - slack/status:
            fail_only: false
            webhook: $SLACK_SHOP_WEBHOOK
      - attach_workspace:
          at: .
       # start proprietary DB using private Docker image
       # with credentials stored in the UI
      - run: |
          ls -al
      - aws-cli/setup:
          profile-name: circleci
      - run: aws s3 sync dist s3://shopizer-admin/ --region ca-central-1 --delete --profile circleci
      - slack/status:
          fail_only: false
          webhook: $SLACK_ADMIN_WEBHOOK

# Orchestrate our job run sequence
workflows:
  build_and_deploy:
    jobs:
      - build-job
      - image:
          requires:
            - build-job
          filters:
              branches:
                only:
                  - main
      - deploy:
          requires:
            - build-job
          filters:
              branches:
                only:
                  - main

  build_and_push_image:
    jobs:
      - aws-ecr/build-and-push-image:
          account-url: AWS_ECR_ACCOUNT_URL_ENV_VAR_NAME
          aws-access-key-id: ACCESS_KEY_ID_ENV_VAR_NAME
          aws-secret-access-key: SECRET_ACCESS_KEY_ENV_VAR_NAME
          no-output-timeout: 20m
          region: AWS_REGION_ENV_VAR_NAME
          repo: rufina
          skip-when-tags-exist: false
          tag: 'latest'
          filters:
            branches:
              only:
                - rufina
